◆변수
 - 데이터를 저장하는 물리적인 공간
 - 변수 선언방법
자료형 변수명 = 초기값;
 - 변수명 작성 규칙
 - 자료형 변환(기본 자료형을 말함)
 	- 자동 : 작은 데이터를 큰 데이터에 저장하는 경우, 정수를 실수에 저장하는 경우 -> 자동으로 변환이 일어남
	- 강제(명시적) : 큰 데이터를 작은 데이터에 저장하는 경우 -> 데이터 손실이 발생할 수 있음, 예외적으로 자동으로 가능하지만 필요에 의해 강제로 하는 경우가 있음(나누기같은 경우).
		        값 또는 변수 앞에 (자료형)을 붙여서 형변환 한다.


◆연산자
 - 산술 : 정수/정수 => 정수를 조심!(데이터 손실이 일어날 수 있음)
 - 비교연산자 : 
	- ==를 =과 혼동하면 안 됨.
	- 참조변수는 ==를 이용할때 조심! 참조변수의 ==는 값이 같은 것을 물어보는게 아니라 같은 객체를 공유하는지를 물어봄.
 - 논리 연산자
	- 조건식이 복잡하면 논리 연산자를 잘못 쓸 수 있음.
 - 증감 연산자
 - 조건선택연산자 -> 마음의 여유가 있을때 공부해도 괜찮음.(조건문이 더 중요!)
 - 대입연산자 : 덮어쓰기라는 것을 잘 알아두자.
 

◆조건문
 - if, else if, else 
	- ~하면 -> 조건식, ... -> 실행문
 - switch : 실수로 break;문을 빼먹지 말자!, ()안에 변수 또는 식을 잘 설정. 작거나 같다 크거나 같다의 비교연산자가 올 수 없다. 


◆반복문
 - 횟수 유의
 - 무한루프, 한 번도 실행 안되는 경우 조심
 

◆Continue : 특정 위치로 이동
 - for문은 증감식, while문 do while문은 조건식 이동


◆break : 반복문을 빠져 나옴


◆배열
 - 같은 자료형을 데이터들을 모아 놓은 곳
 - 반복문을 사용하여 데이터들을 편리하게 관리하기 위해 사용
 - 배열 선언 방법
	- 자료형 [] 배열명 = new 자료형[크기];, 클래식명 [] 배열명 = new 클래식명[크기];
 - 할당된 배열 각 번지는 자료형에 맞는 초기값으로 초기화가 된다.
 - 시작번지 0, 마지막번지 배열크기 -1 
 - 배열 arr에 i번지에 있는 값을 접근 : arr[i]


