-- 1. 예매를 하면, 해당 영화상영시간의 예매 가능 좌석을 수정해주는 트리거를 생성하고, 테스트해보세요.
-- 1번 서진풀이
USE cgv;
DROP TRIGGER IF EXISTS TICKETING_TOTAL_SEAT;
DELIMITER //
CREATE TRIGGER TICKETING_TOTAL_SEAT AFTER INSERT
ON TICKETING
FOR EACH ROW 
BEGIN
-- 추가된 데이터는 NEW를 통해 가져옴.
UPDATE screen_schedule SET SS_POSSIBLE_SEAT = SS_POSSIBLE_SEAT - NEW.ti_amount
WHERE SS_NUM = NEW.TI_SS_NUM;
END //
DELIMITER ;

INSERT INTO TICKETING(TI_AMOUNT, TI_TOTAL_PRICE, TI_ME_ID, TI_SS_NUM)
	VALUES(5, 50000, 'abc', 29);

-- 1번 강사님 풀이
USE cgv;
-- 제품 구매 했을 때 동작하는 트리거
DROP TRIGGER IF EXISTS INSERT_TICKETING;
DELIMITER //
CREATE TRIGGER INSERT_TICKETING AFTER INSERT
ON TICKETING
FOR EACH ROW 
BEGIN
-- 추가된 데이터는 NEW를 통해 가져옴.
UPDATE screen_schedule SET SS_POSSIBLE_SEAT = SS_POSSIBLE_SEAT - NEW.TI_AMOUNT
WHERE SS_NUM = NEW.TI_SS_NUM;
END //
DELIMITER ;

INSERT INTO TICKETING(TI_AMOUNT, TI_TOTAL_PRICE, TI_ME_ID, TI_SS_NUM)
	VALUES(5, 50000, 'abc', 29);
    
-- 제품 구매를 취소 했을 때 트리거
USE shoppingmalltc;
DROP TRIGGER IF EXISTS UPDATE_BUY;
DELIMITER //
CREATE TRIGGER UPDATE_BUY AFTER UPDATE
ON BUY
FOR EACH ROW 
BEGIN
-- 제품 수량 변경
	IF NEW.BU_AMOUNT = OLD.BU_AMOUNT AND NEW.BU_STATE = '구매취소' THEN 
		UPDATE product 
			SET PR_AMOUNT = PR_AMOUNT + OLD.BU_AMOUNT
		WHERE PR_NUM = OLD.BU_PR_NUM;
		ELSE 
			IF NEW.BU_AMOUNT != OLD.BU_AMOUNT THEN 
			UPDATE product 
				SET PR_AMOUNT = PR_AMOUNT + OLD.BU_AMOUNT - NEW.BU_AMOUNT
		WHERE PR_NUM = OLD.BU_PR_NUM;
		END IF;
    END IF;

END //
DELIMITER ;
UPDATE BUY SET BU_STATE = '구매취소' WHERE BU_NUM = 'QWEA202212211710';
UPDATE BUY SET BU_AMOUNT = 2 WHERE BU_NUM = 'QWEA202212211710';

SELECT * FROM BUY;
SELECT * FROM UPDATE_BUY;


