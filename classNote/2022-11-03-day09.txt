◆변수의 용어정리
 - 참조변수 vs 일반변수(기본자료형으로 만들어진 변수)
 - 일반변수 : 기본자료형을 만들어진 변수
 - 참조변수 : 기본자료형이 아닌 것들로 만들어진 것
	- 배열, 객체(대표적으로 : String) 등

 - 매개변수 : 메소드를 실행하기 위해 필요한 정보를 전달하는 변수
 - 인자 : 메소드를 실행하기 위해 실제 전달하는 값을 인자라고 표현 
 - 지역변수 : 메소드 안에서 선언되어서 사용되는 변수
 - 멤버변수(필드변수) : 클래스 안에서 선언하는 변수
	- 인스턴스 필드
	- 클래스 필드

◆메소드
 - [하나의] 기능을 하도록 모아놓은 코드. 꼭 하나는 아니겠지만, 좋은 메소드는 하나의 기능을 가지는 것이 좋다.
 - 재사용을 통해 코드의 길이를 줄임.
 - 기능의 유지보수를 쉽게 하기 위해
 - 구조를 쉽게 파악할 수 있다.
 
◆메소드 오버로딩 
 - 동일한 메소드가 여러개 있는 것
 - 매개변수가 다른 경우 : 종류, 개수
 - 같은 이름으로 같은 기능을 실현하는데 매개변수의 종류를 다양하게 만들 수 있다. => 편리하기 때문!

◆가변인자
 - 매개변수의 개수가 미정

◆클래스
 - 생성자 : 필드를 초기화 
 - 메소드 : 기능
 - 필드 : 정보
=> 클래스를 통해 필드를 편리하게 관리하고,  필요한 기능을 구현하여 사용

◆필드 초기화 순서
1. 필드의 기본값으로 초기화
2.명시적 초기화 (필드 선언 후 =(대입연산자)을 통해 하는 초기화)
3.초기화 블록 : {}
4.생성자 -> 생성자가 최종적으로 초기화가 된다는 것을 기억.

◆static
 - 같은 클래스로 만들어진 모든 객체들이 공유하는 필드 또는 메소드에 붙이는 예약어 또는 키워드
 - 특징 : 클래스명으로 호출
 - 생성 시점이 클래스가 메모리에 로딩이 되면 필드와 메소드가 생성
 - static이 안 붙은 필드 또는 메소드 => 인스턴스 필드 또는 메소드, 객체 필드 또는 메소드
	- 각 객체마다 또는 메소드를 가짐
	- 객체명으로 호출
	- 객체를 생성하는 시점에 필드와 메소드가 생성
 - static 필드 또는 메소드 => static메소드 또는 객체메소드에서 사용 가능.
 - 객체 필드 또는 메소드 => 객체 메소드에 사용 가능

◆final 필드 : 상수 => 값을 변경할 수 없다. 



◆클래스 이용시 뭐가 편한지 이해가 조금 덜 됨